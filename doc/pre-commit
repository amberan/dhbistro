#!/usr/bin/env -S bash -i
# https://github.com/symplify/easy-coding-standard

# https://gist.github.com/jwage/b1614c96ea22ccaf68b7
# https://tsh.io/blog/tips-on-keeping-php-code-under-control/
# $ECS check --config=.ecs.php * --match-git-diff
# $ECS check-markdown --config=.ecs.php * --match-git-diff
# possible improvements https://github.com/BernardoSilva/git-hooks-php/blob/master/pre-commit

ECS="./vendor/bin/ecs"
ECS_CONFIG=".ecs.php"

FILES=` git status --porcelain | grep -e '^[AM]\(.*\).php\|^[AM]\(.*\).md$' | cut -c 3- | tr '\n' ' '`


function install_tools()
{
        read -p "No validation tools found, should I install them? y/n " -n 1 -r </dev/tty
        if [[ $REPLY =~ ^[Yy]$ ]]; then
		sudo apt -qq -y install composer
		composer require symplify/easy-coding-standard --dev
	fi
}

function ecs_validate_php()
{
	 $ECS check --config=$ECS_CONFIG ${FILES}
	 $ECS check-markdown --config=$ECS_CONFIG ${FILES}
}

function ecs_fix_php()
{
	$ECS check --config=$ECS_CONFIG --fix ${FILES}
	$ECS check-markdown --config=$ECS_CONFIG --fix ${FILES}
	git add ${FILES}
}

echo "easy coding standard pre-commit hook start"
if [ -t 2 ]; then # interactive
	if [[ ! -x $ECS  ]]; then install_tools; fi
	if [ -x $ECS ]  && [ -n "$FILES" ]; then

		ecs_validate_php
		if [ $? != 0 ]; then
			read -p "Do you want to fix this? y/n " -n 1 -r </dev/tty
			if [[ $REPLY =~ ^[Yy]$ ]]; then
				printf "\n"
				ecs_fix_php
				ecs_validate_php
			else
				printf "\n\nThen fix it yourself ;P\n\n"
				exit 1
			fi
		fi
	fi
else
       if [ -x $ECS ] && [ -n "$FILES" ]; then
		ecs_fix_php
	fi
fi
echo "easy coding standard pre-commit hook finish"

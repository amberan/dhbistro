include:
  - template: Code-Quality.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

variables:
  SAST_EXPERIMENTAL_FEATURES: "true"
  SAST_DEFAULT_ANALYZERS: "nodejs-scan,eslint,phpcs-security-audit"
  SEARCH_MAX_DEPTH: 10

stages:
  - build
  - test 
  - deploy

build:
  stage: build
  image: alpine
  before_script:
    - apk add gzip
  script:
    - tar czf build.tgz --exclude .git --exclude bistro.tmp .
  artifacts:
    paths: [build.tgz]
    expire_in: 1 days
  rules:
    - when: always

# https://docs.gitlab.com/ee/user/project/merge_requests/code_quality.html  
code_quality:
  stage: test
  interruptible: true
  resource_group: $CI_COMMIT_SHA
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
    paths: [gl-code-quality-report.json]
  rules:
    - if: '$CODE_QUALITY_DISABLED'
      when: never  
    - when: always

code_quality_html:
  stage: test
  interruptible: true
  resource_group: $CI_COMMIT_SHA
  extends: code_quality
  allow_failure: true
  variables:
    REPORT_FORMAT: html
    CI_DEBUG_TRACE: "true"
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
    paths: [gl-code-quality-report.json]
  rules:
    - if: '$CODE_QUALITY_DISABLED'
      when: never  
    - when: always

code_quality_html:
  stage: test
  extends: code_quality
  allow_failure: true
  variables:
    REPORT_FORMAT: html
  artifacts:
#    reports:
#      codequality: gl-code-quality-report.json
    paths: [gl-code-quality-report.html] #,gl-code-quality-report.json
    expire_in: 3 months
  rules:
    - if: '$CODE_QUALITY_DISABLED'
      when: never
    - if: '$CI_PIPELINE_SOURCE ==  "merge_request_event"' # Run code quality job in merge request pipelines
      when : always
    - if: '$CI_PIPELINE_SOURCE == "web"' # Run code quality job in pipelines started from gitlab UI
      when : always
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'      # Run code quality job in pipelines on the master branch (but not in other branch pipelines)
      when : always
    - if: '$CI_COMMIT_TAG'                               # Run code quality job in pipelines for tags
      when : always
    - when: never

# https://docs.gitlab.com/ee/user/application_security/sast/index.html#configure-sast-manually
phpcs-security-audit-sast:
  interruptible: true
#  dependencies:
#    - build

# https://gitlab.alembiq.net/help/user/application_security/secret_detection/index.md
secret_detection:
  interruptible: true
#  dependencies:
#    - build
  variables:
    SECRET_DETECTION_HISTORIC_SCAN: "true"

deploy test:  
  stage: deploy
  image: alpine
  needs: [build]
  before_script:
    - apk add openssh-client
    - eval $(ssh-agent -s)
    - cat $SSH_KEY | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
#    - export
    - ssh-keyscan alembiq.net >> ~/.ssh/known_hosts
  script:
    - scp build.tgz gitlab-ci@alembiq.net:.
    - ssh gitlab-ci@alembiq.net "mkdir $DEPLOY_FOLDER/$CI_JOB_ID && tar zxvf build.tgz -C $DEPLOY_FOLDER/$CI_JOB_ID/ && cp $DEPLOY_FOLDER/htdocs/inc/important.php $DEPLOY_FOLDER/$CI_JOB_ID/inc/ && rsync -vau --remove-source-files $DEPLOY_FOLDER/htdocs/files/ $DEPLOY_FOLDER/$CI_JOB_ID/files/ && tar zcvf $DEPLOY_FOLDER/backup-$CI_JOB_ID.tgz --exclude $DEPLOY_FOLDER/htdocs/cache --exclude $DEPLOY_FOLDER/htdocs/.git $DEPLOY_FOLDER/htdocs/ && mv $DEPLOY_FOLDER/htdocs $DEPLOY_FOLDER/backup && mv $DEPLOY_FOLDER/$CI_JOB_ID $DEPLOY_FOLDER/htdocs && rm -rf $DEPLOY_FOLDER/backup && rm build.tgz"
  rules: 
    - when: manual

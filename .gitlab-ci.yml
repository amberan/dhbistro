include:
  - template: Code-Quality.gitlab-ci.yml

stages:
  - build
  - test 

build:
  stage: build
  image: alpine
  before_script:
    - apk add gzip
  script:
    - pwd
    - ls -ll
    - ls >filelist.txt
    - tar czf build.tgz * .* --exclude .git
  artifacts:
    paths: [build.tgz,filelist.txt]
    expire_in: 1 days
  rules:
    - when: always

# https://docs.gitlab.com/ee/user/project/merge_requests/code_quality.html  
code_quality:
  stage: test
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
    paths: [gl-code-quality-report.json]
  rules:
    - if: '$CODE_QUALITY_DISABLED'
      when: never  
    - when: always

code_quality_html:
  stage: test
  extends: code_quality
  allow_failure: true
  variables:
    REPORT_FORMAT: html
  artifacts:
#    reports:
#      codequality: gl-code-quality-report.json
    paths: [gl-code-quality-report.html] #,gl-code-quality-report.json
    expire_in: 3 months
  rules:
    - if: '$CODE_QUALITY_DISABLED'
      when: never
    - if: '$CI_PIPELINE_SOURCE ==  "merge_request_event"' # Run code quality job in merge request pipelines
      when : always
    - if: '$CI_PIPELINE_SOURCE == "web"' # Run code quality job in pipelines started from gitlab UI
      when : always
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'      # Run code quality job in pipelines on the master branch (but not in other branch pipelines)
      when : always
    - if: '$CI_COMMIT_TAG'                               # Run code quality job in pipelines for tags
      when : always
    - when: never

deploy test:  
  stage: test
  image: alpine
  needs: [build]
  before_script:
    - apk add openssh-client
    - eval $(ssh-agent -s)
    - cat $SSH_KEY | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - export
    - ssh-keyscan alembiq.net >> ~/.ssh/known_hosts
  script:
    - ls -ll
    - scp build.tgz gitlab-ci@alembiq.net:.
    - ssh gitlab-ci@alembiq.net "export bistroCI=bistro$(date +%s) && mkdir $DEPLOY_FOLDER/$bistroCI && tar zxf build.tgz -C $DEPLOY_FOLDER/$bistroCI/ && cp $DEPLOY_FOLDER/htdocs/inc/important.php $DEPLOY_FOLDER/$bistroCI/inc/ && mv $DEPLOY_FOLDER/htdocs/files/ $DEPLOY_FOLDER/$bistroCI/files/ && tar zcvf $DEPLOY_FOLDER/backup-$bistroCI.tgz --exclude $DEPLOY_FOLDER/htdocs/cache --exclude $DEPLOY_FOLDER/htdocs/.git $DEPLOY_FOLDER/htdocs/ && mv $DEPLOY_FOLDER/htdocs $DEPLOY_FOLDER/backup && mv $DEPLOY_FOLDER/$bistroCI $DEPLOY_FOLDER/htdocs && rm -rf $DEPLOY_FOLDER/backup"
#   image: debian:latest
#   stage: staging
#   needs: [build]
#   before_script: 
#     - DEBIAN_FRONTEND="noninteractive"
#     - 'which ssh-agent || ( apt -qq update -y && apt -qq install openssh-client -y )'
#     - eval $(ssh-agent -s)
#     - mkdir ~/.ssh
#     - ssh-keyscan $CI_ENVIRONMENT_NAME >> ~/.ssh/known_hosts
#     - chmod 600 ~/.ssh/known_hosts
#   script:
#     - echo "Deploy to staging $URL"
#     - chmod 600 $SSH_KEY
#     - cat $SSH_KEY | tr -d '\r' | ssh-add -
#     - export # DEBUG
# #    - ssh gitlab-ci@$CI_ENVIRONMENT_NAME "cd /srv/net.alembiq.bistro/htdocs && git reset --hard && git remote set-url --push gitlab $CI_REPOSITORY_URL && git pull gitlab $CI_COMMIT_SHA && exit"
  environment:
    name: bistro.alembiq.net
#     url: http://bistro.alembiq.net
  rules: 
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"' # Run code quality job in merge request pipelines
      when : manual
    - if: '$CI_PIPELINE_SOURCE == "web"' # Run code quality job in pipelines started from gitlab UI
      when : manual
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'      # Run code quality job in pipelines on the master branch (but not in other branch pipelines)
      when : always
    - if: '$CI_COMMIT_TAG'                               # Run code quality job in pipelines for tags
      when : always
    - when: never
